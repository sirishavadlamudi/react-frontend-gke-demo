name: CI/CD Pipeline - React GKE

on:
  push:
    branches: [ main ]

env:
  IMAGE_TAG: ${{ github.sha }}
  PROJECT_ID: ${{ vars.GCP_PROJECT }}
  CLUSTER_NAME: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  REGISTRY: ${{ vars.REGISTRY }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  ARTIFACT_REPO: ${{ vars.ARTIFACT_REPO }}

jobs:

  # ------------------ STAGE 1: Checkout ------------------
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

  # ------------------ STAGE 2: Install Dependencies ------------------
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install

  # ------------------ STAGE 3: Linting ------------------
  lint:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - name: Run ESLint
        run: npm run lint

  # ------------------ STAGE 4: Security Scan ------------------
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: NPM Audit
        run: npm audit --audit-level=moderate || echo "Warnings ignored"

  # ------------------ STAGE 5: Unit Tests ------------------
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v4
      - name: Run Tests
        run: npm test -- --coverage --passWithNoTests

  # ------------------ STAGE 6: Build Docker Image ------------------
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to GCP
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud auth configure-docker $REGISTRY
      - name: Build image
        run: |
          docker build -t $REGISTRY/$PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:$IMAGE_TAG .

  # ------------------ STAGE 7: Vulnerability Scan (Trivy) ------------------
  scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Scan image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  # ------------------ STAGE 8: Push to Artifact Registry ------------------
  push:
    name: Push to Artifact Registry
    runs-on: ubuntu-latest
    needs: scan
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate and Push Image
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > key.json
          gcloud auth activate-service-account --key-file=key.json
          docker push $REGISTRY/$PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:$IMAGE_TAG

  # ------------------ STAGE 9: Deploy to GKE ------------------
  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: push
    steps:
      - uses: actions/checkout@v4

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ vars.GCP_PROJECT }}

      - name: Install GKE Auth Plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin -q
          echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Connect to GKE
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: "True"
        run: |
          gcloud container clusters get-credentials $CLUSTER_NAME --zone $GKE_ZONE --project $PROJECT_ID

      - name: Deploy to Cluster
        run: |
          kubectl set image deployment/react-frontend react-frontend=$REGISTRY/$PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:$IMAGE_TAG || kubectl apply -f k8s/
          kubectl rollout status deployment/react-frontend
