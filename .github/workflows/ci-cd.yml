name: CI/CD Pipeline - React GKE

on:
  push:
    branches: [ main ]

env:
  IMAGE_TAG: ${{ github.sha }}
  PROJECT_ID: ${{ vars.GCP_PROJECT }}
  CLUSTER_NAME: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  REGISTRY: ${{ vars.REGISTRY }}
  ARTIFACT_REPO: ${{ vars.ARTIFACT_REPO }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}

jobs:

  # ------------------ STAGE 1: Checkout ------------------
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  # ------------------ STAGE 2: Install Dependencies ------------------
  install:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install

  # ------------------ STAGE 3: Linting ------------------
  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - name: Run ESLint
        run: npm run lint

  # ------------------ STAGE 4: Security Scan ------------------
  security:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - name: Run npm audit
        run: npm audit --audit-level=high || echo "Security warnings ignored"

  # ------------------ STAGE 5: Unit Tests ------------------
  test:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - name: Run Tests
        run: npm test -- --coverage --passWithNoTests

  # ------------------ STAGE 6 & 7: Build & Push Image ------------------
  docker-build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker $REGISTRY -q

      - name: Build Docker Image
        run: |
          docker build -t $REGISTRY/$PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:$IMAGE_TAG .

      - name: Push Docker Image
        run: |
          docker push $REGISTRY/$PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:$IMAGE_TAG

  # ------------------ STAGE 8: Trivy Scan ------------------
  scan:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker $REGISTRY -q

      - name: Pull image for scanning
        run: |
          docker pull $REGISTRY/$PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:$IMAGE_TAG

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  
  # ------------------ STAGE 9: Deploy to GKE ------------------
deploy-gke:
  runs-on: ubuntu-latest
  needs: scan
  steps:
    - uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Install Google Cloud SDK + GKE Auth Plugin
      run: |
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" \
          | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        sudo apt-get install -y apt-transport-https ca-certificates gnupg
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg \
          | sudo gpg --dearmor --yes -o /usr/share/keyrings/cloud.google.gpg
        sudo apt-get update
        sudo apt-get install -y google-cloud-cli google-cloud-sdk-gke-gcloud-auth-plugin

    - name: Get GKE Credentials
      run: |
        gcloud container clusters get-credentials my-gke-cluster \
        --zone us-central1-a \
        --project $PROJECT_ID

    - name: Deploy image to GKE
      run: |
        kubectl set image deployment/react-frontend-deployment \
        react-frontend-container=$REGISTRY/$PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:$IMAGE_TAG \
        --namespace default

    - name: Verify rollout
      run: kubectl rollout status deployment/react-frontend-deployment --namespace default