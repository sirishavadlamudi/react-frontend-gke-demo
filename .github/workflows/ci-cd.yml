name: CI/CD Pipeline - React GKE

on:
  push:
    branches: [ main ]

env:
  IMAGE_TAG: ${{ github.sha }}
  PROJECT_ID: ${{ vars.GCP_PROJECT }}
  CLUSTER_NAME: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  REGISTRY: ${{ vars.REGISTRY }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  ARTIFACT_REPO: ${{ vars.ARTIFACT_REPO }}

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:

    # 1Ô∏è‚É£ Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # 2Ô∏è‚É£ Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    # 3Ô∏è‚É£ Install dependencies
    - name: Install dependencies
      run: npm install

    # 4Ô∏è‚É£ Linting
    - name: Run ESLint
      run: npm run lint

    # 5Ô∏è‚É£ Security Scan
    - name: Security Scan (npm audit)
      run: npm audit --audit-level=moderate || echo "Warnings ignored"

    # 6Ô∏è‚É£ Unit Tests
    - name: Run Tests
      run: npm test -- --coverage --passWithNoTests

    # 7Ô∏è‚É£ Authenticate to GCP & Build Docker Image
    - name: Authenticate & Build Docker Image
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > key.json
        gcloud auth activate-service-account --key-file=key.json
        gcloud auth configure-docker $REGISTRY
        docker build -t $REGISTRY/$PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:$IMAGE_TAG .

    # 8Ô∏è‚É£ Trivy Scan
    - name: Trivy Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    # 9Ô∏è‚É£ Push Docker Image
    - name: Push Image to Artifact Registry
      run: docker push $REGISTRY/$PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:$IMAGE_TAG

    # üîü Setup gcloud
    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ vars.GCP_PROJECT }}

    # 1Ô∏è‚É£1Ô∏è‚É£ Connect to GKE
    - name: Get GKE Credentials
      run: gcloud container clusters get-credentials $CLUSTER_NAME --zone $GKE_ZONE --project $PROJECT_ID

    # 1Ô∏è‚É£2Ô∏è‚É£ Deploy to GKE
    - name: Deploy to GKE
      run: |
        kubectl set image deployment/react-frontend react-frontend=$REGISTRY/$PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:$IMAGE_TAG || kubectl apply -f k8s/
        kubectl rollout status deployment/react-frontend
